spring:
  datasource:
    platform: h2
    #jdbc:h2:~/testdb 会报错，数据库不会自动创建---已经解决，降低h2版本199-197
    #url: jdbc:h2:mem:testdb;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    url: jdbc:h2:~/testdb;MODE=MYSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    #initialization-mode: always
    #data: classpath:sql/boot_backend.sql
  h2:
    console:
      enabled: true

  #不存在会自动创建/包括库、表等
  jpa:
    hibernate:
      ddl-auto: create-drop
    generate-ddl: true
    show-sql: true


  batch:
    #自动创建table
    initialize-schema: always
    job:
      #禁止自动执行job，否则会一直执行所有job
      enabled: false

# 当前运行的job name
job:
  key: generateMultiTxtFileByTaskletJob
# readDBJob     通过序列器从db读取并经过普通的writer
# readDBJob2    通过jpa repository从db读取并经过普通的writer(后面都用jpa repository)
# readDBAndWriteJsonFileJob   从db读取并写入json文件
# readDBAndWriteTxtFileJob    从db读取并写入txt文件
# readDBAndWriteCsvFileJob    从db读取并写入csv文件
# readJsonFileAndWriteDBJob   从json文件读入并写入db中
# readTxtFileAndWriteDBJob    从txt文件读入并写入db中-chunk
# readDBAndWriteDatFileStep2  从txt文件读入并写入db中-tasklet
# readDBAndWriteDatFileJob    从db中读取并写入dat中
# readCsvFileAndWriteDBJob    从csv文件读入并写入db中
# splitFlowExampleJob         并发流，多个step并发执行
# readDBAndWriteDBByRepositoryJob   repository 方式读写数据库
# simpleDelimitedFileReadingExampleJob  官方对普通的读取csv文件 例子
# readDBByTaskletJob           只进行读取，不写操作，使用tasklet
# uploadAndDownloadJsonFileBySftpJob    上传并下载json file 到服务器 tasklet
# partitionMultiFileJob        分区进行读取，这里是对多个文件进行分区处理
# deciderUsageJob              根据条件控制后边的Job是否继续执行
# generateMultiTxtFileByTaskletJob       可以生成多个json，根据不同的object
